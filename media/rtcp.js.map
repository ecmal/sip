{
  "version": 3,
  "file": "rtcp.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/sip/src",
  "sources": [
    "rtcp.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import {Util} from \"../models/common/utils\";\nimport {Call} from \"../dialogs/invitation/call\";\nimport {Sdp} from \"../models/common/sdp\";\nexport class RtcpPacket {\n    static parse(buffer:Buffer){\n        switch(RtcpPacket.getType(buffer)){\n            case 200 : return new RtcpSRPacket(buffer);\n            case 201 : return new RtcpRRPacket(buffer);\n            case 202 : return new RtcpSDPacket(buffer);\n            case 203 : return new RtcpGBPacket(buffer);\n            case 204 : return new RtcpAPPacket(buffer);\n        }\n    }\n    static getType(buffer:Buffer){\n        return buffer[1];\n    }\n    static getLength(buffer:Buffer){\n        return (buffer.readUInt16BE(2)+1)*4;\n    }\n    constructor (options) {\n        if(options instanceof Buffer){\n            if(this.constructor==RtcpPacket){\n                return RtcpPacket.parse(options)\n            }else{\n                this.buffer = options;\n            }\n        }\n    }\n\n    public buffer:Buffer;\n\n    public get version():number{\n        return this.buffer[0] >> 6;\n    }\n    public set version(val:number){\n        this.buffer[0] |= (val << 6);\n    }\n    public get padding():number{\n        return (this.buffer[0] >> 5) & 1\n    }\n    public set padding(val:number){\n        this.buffer[0] |= ((val&1) << 5);\n    }\n    public get type():number{\n        return this.buffer[1];\n    }\n    public set type(val:number){\n        val = Util.toUnsigned(val);\n        if (val <= 127) {\n            this.buffer[1] &= 0x80;\n            this.buffer[1] |= val;\n        }\n    }\n    public get length():number{\n        return RtcpPacket.getLength(this.buffer);\n    }\n    public set length(val:number){\n\n    }\n\n    public toJSON(){\n        return {\n            version             : this.version,\n            type                : this.type,\n            length              : this.length\n        }\n    }\n\n    public copy(){\n        var newBuffer = new Buffer(this.buffer.length);\n        this.buffer.copy(newBuffer);\n        return new RtcpPacket(newBuffer);\n    }\n}\nconst REPORT_LENGTH=24;\nconst SR_REPORT_START=28;\nconst RR_REPORT_START=8;\n\nexport class RtcpSRPacket extends RtcpPacket {\n    constructor(options){\n        super(options);\n    }\n    public reports:RtcpReport[];\n    public get reportsCount(){\n        return this.buffer[0] & 0x1F;\n    }\n    public set reportsCount(val:number){\n        if (val <= 31) {\n            this.buffer[0] &= 0xe0;\n            this.buffer[0] |= val;\n        }\n    }\n    public get source():number{\n        return this.buffer.readUInt32BE(4);\n    }\n    public set source(val:number){\n        this.buffer.writeInt32BE(val,4);\n    }\n    public get startTime():number{\n        return this.buffer.readUInt32BE(8);\n    }\n    public set startTime(val:number){\n        this.buffer.writeInt32BE(val,8);\n    }\n    public get endTime():number{\n        return this.buffer.readUInt32BE(12);\n    }\n    public set endTime(val:number){\n        this.buffer.writeInt32BE(val,12);\n    }\n    public get timestamp():number{\n        return this.buffer.readUInt32BE(16);\n    }\n    public set timestamp(val:number){\n        this.buffer.writeInt32BE(val,16);\n    }\n    public get senderPacketCount():number{\n        return this.buffer.readUInt32BE(20);\n    }\n    public set senderPacketCount(val:number){\n        this.buffer.writeInt32BE(val,20);\n    }\n    public get senderOctetCount():number{\n        return this.buffer.readUInt32BE(24);\n    }\n    public set senderOctetCount(val:number){\n        this.buffer.writeInt32BE(val,24);\n    }\n    public toJSON(){\n        return {\n            version             : this.version,\n            padding             : this.padding,\n            reportsCount        : this.reportsCount,\n            type                : this.type,\n            length              : this.length,\n            source              : this.source,\n            startTime           : this.startTime,\n            endTime             : this.endTime,\n            timestamp           : this.timestamp,\n            senderPacketCount   : this.senderPacketCount,\n            senderOctetCount    : this.senderOctetCount,\n            reports             : (this.reportsCount==0)?null:RtcpReport.getReports(this.buffer,SR_REPORT_START)\n        }\n    }\n\n}\nexport class RtcpRRPacket extends RtcpPacket {\n    constructor(options){\n        super(options)\n    }\n    public get reportsCount(){\n        return this.buffer[0] & 0x1F;\n    }\n    public set reportsCount(val:number){\n        if (val <= 31) {\n            this.buffer[0] &= 0xe0;\n            this.buffer[0] |= val;\n        }\n    }\n    public get source():number{\n        return this.buffer.readUInt32BE(4);\n    }\n    public set source(val:number){\n        this.buffer.writeInt32BE(val,4);\n    }\n\n    public toJSON(){\n        return {\n            version             : this.version,\n            padding             : this.padding,\n            reportsCount        : this.reportsCount,\n            type                : this.type,\n            length              : this.length,\n            source              : this.source,\n            reports             : (this.reportsCount==0)?null:RtcpReport.getReports(this.buffer,RR_REPORT_START)\n        }\n    }\n}\nexport class RtcpReport {\n    private buffer:Buffer;\n\n    constructor(buffer:Buffer) {\n        this.buffer=buffer;\n    }\n    public static getReports(buffer:Buffer,start:number){\n        var reports=[];\n        var count:number=buffer.slice(start).length/REPORT_LENGTH;\n        for(var i=0;i<count;i++){\n            var buf;\n            buf=buffer.slice(start+i*REPORT_LENGTH,start+i*REPORT_LENGTH+REPORT_LENGTH);\n            reports.push(new RtcpReport(buf).toJSON());\n        }\n        return reports;\n    }\n    public get source():number {\n        return this.buffer.readUInt32BE(0);\n    }\n    public set source(val:number) {\n        this.buffer.writeInt32BE(val, 0);\n    }\n    public get lostFraction():number {\n        return this.buffer.readUInt8(4);\n    }\n    public set lostFraction(val:number) {\n        this.buffer.writeInt8(val, 4);\n    }\n    public get lostCount():number {\n        return this.buffer.readUIntBE(5,3);\n    }\n    public set lostCount(val:number) {\n        this.buffer.writeIntBE(val,5,3);\n    }\n    public get highestSequence():number {\n        return this.buffer.readUInt32BE(8);\n    }\n    public set highestSequence(val:number) {\n        this.buffer.writeInt32BE(val, 8);\n    }\n    public get jitter():number {\n        return this.buffer.readUInt32BE(12);\n    }\n    public set jitter(val:number) {\n        this.buffer.writeInt32BE(val, 12);\n    }\n    public get LSR():number {\n        return this.buffer.readUInt32BE(16);\n    }\n    public set LSR(val:number) {\n        this.buffer.writeInt32BE(val, 16);\n    }\n    public get DLSR():number {\n        return this.buffer.readUInt32BE(20);\n    }\n    public set DLSR(val:number) {\n        this.buffer.writeInt32BE(val, 20);\n    }\n    public toJSON(){\n        return {\n            source           : this.source,\n            lostFraction     : this.lostFraction,\n            lostCount        : this.lostCount,\n            highestSequence  : this.highestSequence,\n            jitter           : this.jitter,\n            LSR              : this.LSR,\n            DLSR             : this.DLSR\n        }\n    }\n}\nexport class RtcpSDPacket extends RtcpPacket {\n    private static getSourcesCount(buffer:Buffer){\n        return buffer[0] & 0x1f;\n    }\n    constructor(options){\n        super(options);\n    }\n    get sources(){\n        var cnt =  RtcpSDPacket.getSourcesCount(this.buffer);\n        var list = [],ofs=4,type,len,val,source:any;\n        for(var s=0;s<cnt;s++){\n            list.push(source = {\n                id       : this.buffer.readUInt32BE(ofs)\n            });\n            ofs+=4;\n            while(type=this.buffer[ofs]){\n                len = this.buffer[ofs+1];\n                val = this.buffer.toString('utf8',ofs+2,ofs+2+len);\n                ofs = ofs+2+len;\n                switch(type){\n                    case 1 : source.uri         = val; break;\n                    case 2 : source.name        = val; break;\n                    case 3 : source.email       = val; break;\n                    case 4 : source.phone       = val; break;\n                    case 5 : source.location    = val; break;\n                    case 6 : source.tool        = val; break;\n                    case 7 : source.note        = val; break;\n                }\n            }\n            ofs++;\n        }\n        return list;\n    }\n    public toJSON(){\n        return {\n            version             : this.version,\n            type                : this.type,\n            length              : this.length,\n            sources             : this.sources\n\n        }\n    }\n}\n\nexport class RtcpAPPacket extends RtcpPacket {\n    constructor(options){\n        super(options)\n    }\n}\nexport class RtcpGBPacket extends RtcpPacket {\n    private static getSourcesCount(buffer:Buffer){\n        return buffer[0] & 0x1f;\n    }\n    constructor(options){\n        super(options);\n    }\n    get sources(){\n        var cnt =  RtcpGBPacket.getSourcesCount(this.buffer);\n        var list = [],ofs=4,type,len,val,source:any;\n        for(var s=0;s<cnt;s++){\n            list.push(source = {\n                id       : this.buffer.readUInt32BE(ofs)\n            });\n            ofs+=4;\n\n        }\n        return list;\n    }\n    public toJSON(){\n        return {\n            version             : this.version,\n            type                : this.type,\n            length              : this.length,\n            sources             : this.sources\n\n        }\n    }\n}"
  ]
}