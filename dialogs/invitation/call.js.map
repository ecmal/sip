{
  "version": 3,
  "file": "call.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/sip/src",
  "sources": [
    "call.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import {Contact} from \"../../models/common/contact\";\nimport {Emitter} from \"../../events\";\nimport {Uri} from \"../../models/common/uri\";\nimport {Sdp} from \"../../models/common/sdp\";\n\nexport enum CallState {\n    INITIAL,\n    TRYING,\n    TALKING,\n    RINGING,\n    DIALING,\n    ENDED\n}\nexport enum CallDirection {\n    INCOMING,\n    OUTGOING\n}\n\nexport class Call extends Emitter {\n    static EVENTS = {\n        AUDIO       : {\n            SENT    : \"audio:send\",\n            RECEIVE : \"audio:receive\",\n            START   : \"audio:start\",\n            STOP    : \"audio:stop\",\n            UPDATE  : \"audio:update\"\n        }\n    };\n\n    public id:string;\n    public direction:CallDirection;\n    public state:CallState;\n    public from:Contact;\n    public to:Contact;\n    \n    public localSdp:Sdp;\n    public remoteSdp:Sdp;\n\n    public get localUsername(){\n        switch(this.direction){\n            case CallDirection.OUTGOING:return this.from.uri.username;\n            case CallDirection.INCOMING:return this.to.uri.username;\n        }\n    }\n    public get remoteUsername(){\n        switch(this.direction){\n            case CallDirection.OUTGOING:return this.to.uri.username;\n            case CallDirection.INCOMING:return this.from.uri.username;\n        }\n    }\n\n    constructor(options){\n        super();\n        this.state = CallState.INITIAL;\n        for(var key in options){\n            this[key] = options[key];\n        }\n        this.on('init',()=>{\n            this.state = CallState.INITIAL;\n        });\n        this.on('trying',()=>{\n            this.state = CallState.TRYING;\n        });\n        this.on('ringing',()=>{\n            if(this.direction==CallDirection.OUTGOING){\n                this.state = CallState.DIALING;\n            }else {\n                this.state = CallState.RINGING;\n            }\n        });\n        this.on('accept',()=>{\n            this.state = CallState.TALKING;\n        });\n        this.on('done',()=>{\n            this.state = CallState.ENDED;\n        });\n    }\n\n    take(){\n        this.emit('take');\n    }\n    drop(){\n        this.emit('drop');\n    }\n\n}\n\n\n"
  ]
}