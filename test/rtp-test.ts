import {RtpPacket} from "sip/media/rtp";
import {RtcpPacket} from "sip/media/rtcp";

var RTP=[
    '8080121d988c324c791a1973517bec6d',
    '8000121e988c32ec791a19735e73f861',
    '8000121f988c338c791a19733e59c8be',
    '80001220988c342c791a1973ea6ce9d3',
    '80001221988c34cc791a1973586472e5',
    '80001222988c356c791a197369f1dbdb',
    '80001223988c360c791a197363ead9e6',
    '80001224988c36ac791a197352eee967',
    '80001225988c374c791a1973f7def556',
    '80001226988c37ec791a19735fd3cddb',
    '80001227988c388c791a1973cbd15e4d',
    '80001228988c392c791a1973c6c7d569',
    '80001229988c39cc791a1973d0dd594f',
    '8000122a988c3a6c791a197379e77665',
    '8000122b988c3b0c791a1973585e5a5a',
    '8000122c988c3bac791a19735b5cfcd6',
    '8000122d988c3c4c791a1973cacacbce',
    '8000122e988c3cec791a1973cecedadc',
    '8000122f988c3d8c791a1973c9cfd7e8',
    '80001230988c3e2c791a1973e0767c5e',
    '80001231988c3ecc791a1973ebf4ddd9',
    '80001232988c3f6c791a19736b5d5059',
    '80001233988c400c791a19735651565f',
    '80001234988c40ac791a19736e56596a',
    '80001235988c414c791a1973675de6d9',
    '80001236988c41ec791a197358636afc',
    '80001237988c428c791a19734f61ede2'
];

var RTCP=[
    '81c8000c62dd4735da9fed7a17656800000000000000000000000000a6c0cf27000000000000dab800000045ed79632300009329',
    '81c90007728041c9005951080000000000000002000000900000000000000000',
    '80c80006791a1973da9eabca2e9a5000988c324c00000001000000ac',
    '81ca000d791a1973012a323039393638333736325f7461705f333730393730363631385f414049332d504d53534950312d50583100000000',
    '80c80006791a1973da9eabcf3110f000988ccee1000000fb0000a8a4',
    '81ca000d791a1973012a323039393638333736325f7461705f333730393730363631385f414049332d504d53534950312d50583100000000',
    '81ca001104c610e0012d7369703a5350303030324069332d64636963312d7078312e66726565646f6d6465627472656c6965662e636f6d060e4c696e70686f6e652d332e392e3000'
];

for(let x in RTP){
    var raw =new Buffer(RTP[x],'hex');
    var pack = new RtpPacket(raw).toJSON();
    var buf = new RtpPacket(pack).buffer;
    if(buf.compare(raw)!=0){
        console.info('OLD',raw.toString('hex'));
        console.info('NEW',buf.toString('hex'));
        console.info(pack)
    }
}

for(let x in RTCP){
    console.info('RTCP',new RtcpPacket(new Buffer(RTCP[x],'hex')).toJSON());
}

