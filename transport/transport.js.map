{
  "version": 3,
  "file": "transport.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/sip/src",
  "sources": [
    "transport.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport {Emitter} from \"../events\";\nimport {Parser} from \"../parser\";\nimport {Message} from \"../models/message\";\nimport {Via} from \"../models/common/via\";\nimport {Agent} from \"../models/common/agent\";\nimport {Request} from \"../models/message/request\";\nimport {Uri} from \"../models/common/uri\";\nimport {Response} from \"../models/message/response\";\nimport {Util} from \"../models/common/utils\";\n\n\nexport class Transport extends Emitter {\n\n    public static CONNECT:string='connected';\n    public static DISCONNECT:string='disconnect';\n\n\n    private static separator = new Buffer('\\r\\n\\r\\n');\n    private static indexOf(buffer:Buffer):number{\n        var sep =Transport.separator;\n        for(var i=0;i<buffer.length-sep.length+1;i++){\n            var found = true;\n            for(var m=0;m<sep.length;m++){\n                if(buffer[i+m]!=sep[m]){\n                    found = false;\n                    break;\n                }\n            }\n            if(found) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    public get uri():Uri{\n        return Object.defineProperty(this,'uri',<any>{\n            value : new Uri({\n                host : '0.0.0.0',\n                port : 5060\n            })\n        }).uri;\n    }\n    public get proxy():Uri{\n        return Object.defineProperty(this,'proxy',<any>{\n            value : new Uri({\n                host : '0.0.0.0',\n                port : 5060\n            })\n        }).proxy;\n    }\n    public get protocol():string{\n        throw new Error('Abstract property \"protocol\"')\n    }\n    public get connected():boolean{\n        return false;\n    }\n    public get localAddress():string{\n        return this.uri.host;\n    }\n    public get localPort():number{\n        return this.uri.port;\n    }\n\n    public get remoteAddress():string{\n        return this.proxy.host;\n    }\n    public get remotePort():number{\n        return this.proxy.port;\n    }\n\n    public get debug():boolean{\n        return false;\n    }\n\n    constructor(proxy:Uri|string){\n        super();\n        if(proxy){\n            if(typeof proxy =='string'){\n                this.proxy.set(new Uri(<string>proxy));\n            }else{\n                this.proxy.set(proxy);\n            }\n        }\n        this.doInit();\n    }\n\n    public request(request:Request):Promise<Response>{\n        return new Promise((accept,reject)=>{\n            this.once(`response:${request.callId}`,(response:Response)=>{\n                if(response.status>400){\n                    reject(response)\n                }else{\n                    accept(response)\n                }\n            });\n            setTimeout(()=>{\n                this.emit(`response:${request.callId}`,new Response({\n                    status  : 408,\n                    message : 'Request Timeout',\n                    callId  : request.callId\n                }))\n            },60000);\n            this.send(request);\n        })\n    }\n    public send(message:Message){\n        message.agent = this.agent;\n        if(message.content){\n            message.contentLength = message.content.length;\n        }else{\n            message.contentLength = 0;\n        }\n        if(message instanceof Request){\n            if(!message.contact){\n                message.contact = message.from.clone();\n                message.contact.uri.host = this.localAddress;\n                message.contact.uri.port = this.localPort;\n            }\n            if(!message.via){\n                message.via = this.via;\n            }else{\n                message.vias.push(this.via);\n            }\n\n        }\n        if(this.debug){\n            message.print(true)\n        }\n        this.doSend(message.toBuffer());\n    }\n    public toString(options?:any){\n        return `Station(${this.uri.toString(options)})`;\n    }\n\n    protected get via(){\n        return Object.defineProperty(this,'via',<any>{\n            value:new Via({\n                protocol    : 'SIP',\n                version     : '2.0',\n                transport   : this.protocol,\n                host        : this.remoteAddress,\n                port        : this.remotePort,\n                params      : {\n                    branch  : `z9hG4bK.${Util.hash(8)}`,\n                    alias   : undefined,\n                    rport   : undefined\n                }\n            })\n        }).via;\n    }\n    protected get agent(){\n        return Object.defineProperty(this,'agent',<any>{\n            value : new Agent({\n                name        : 'WCB',\n                version     : \"1.0.0\"\n            })\n        }).agent;\n    }\n    protected get processor(){\n        var head = new Buffer(0);\n        var message : Message=null;\n        return Object.defineProperty(this,'processor',<any>{\n            value : (chunk)=>{\n                var sep,data:Buffer = Buffer.concat([head,chunk],head.length+chunk.length);\n                function messageDone(){\n                    return message.contentLength==message.content.length;\n                }\n                function writeHead(header){\n                    try{\n                        message = Parser.parse(header, Message);\n                    }catch(ex){\n                        console.info(header);\n                        console.info(ex.stack);\n                    }\n                }\n                function writeBody(chunk){\n                    if(!message.content){\n                        message.content = new Buffer(0);\n                    }\n                    if(typeof message.contentLength!=\"number\"){\n                        console.info(message)\n                    }\n                    var totalLength = message.contentLength;\n                    var bodyLength = message.content.length;\n                    var pendingLength = totalLength-bodyLength;\n                    var availableLength = Math.min(pendingLength,chunk.length);\n                    var newLength = bodyLength+availableLength;\n                    message.content = Buffer.concat([message.content,chunk.slice(0,availableLength)],newLength) ;\n                    //console.info(\"CHUNK\",totalLength,bodyLength,pendingLength,availableLength,newLength,message.content.length,chunk.length);\n                    return chunk.slice(availableLength);\n                }\n                if(message){\n                    data = writeBody(data);\n                }\n                while((sep=Transport.indexOf(data))>0){\n                    writeHead(data.toString('utf8',0,sep+2));\n                    data = data.slice(sep+4);\n                    data = writeBody(data);\n                    if(messageDone()){\n                        this.onMessage(message);\n                        message = null;\n                    }\n                }\n                head = data;\n            }\n        }).processor;\n    }\n    protected onMessage(message:Message){\n        if(this.debug){\n            message.print()\n        }\n        if(message instanceof Request){\n            this.onRequest(message);\n        } else\n        if(message instanceof Response){\n            this.onResponse(message)\n        }\n    }\n    protected onRequest(request:Request){\n        if(!request.uri.username && request.method==\"OPTIONS\"){\n           this.send(request.reply(200,'OK','to,from,callId,sequence,via,maxForwards'));\n        }\n        if(request.callId){\n            this.emit(`request:${request.callId}`,request);\n        }\n        this.emit('request',request);\n    }\n    protected onResponse(response:Response){\n        if(response.callId){\n            this.emit(`response:${response.callId}`,response);\n        }\n        this.emit('response',response);\n    }\n    protected doSend(buffer:Buffer){\n        throw new Error('Abstract method \"send\"')\n    }\n    protected doInit(){\n        throw new Error('Abstract method \"send\"')\n    }\n    protected inspect(){\n        return this.toString({inspect:true})\n    }\n}\n"
  ]
}