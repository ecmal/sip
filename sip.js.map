{
  "version": 3,
  "file": "sip.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/sip/src",
  "sources": [
    "sip.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import {Emitter} from \"./events\";\nimport {Parser} from \"./parser\";\nimport * as NET from \"node/net\";\nimport {Socket} from \"node/net\";\nimport {Message} from \"sip/models/message\";\nimport {Response} from \"sip/models/message/response\";\n\n\nexport class SipClient extends Emitter {\n    private static getMessage(text:string):string{\n        return text.trim().split('\\n').map(l=>l.trim()).join('\\r\\n')+'\\r\\n\\r\\n';\n    }\n    private static separator = new Buffer('\\r\\n\\r\\n');\n    private static indexOf(buffer:Buffer):number{\n        var sep =SipClient.separator;\n        for(var i=0;i<buffer.length-sep.length+1;i++){\n            var found = true;\n            for(var m=0;m<sep.length;m++){\n                if(buffer[i+m]!=sep[m]){\n                    found = false;\n                    break;\n                }\n            }\n            if(found) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    private socket:Socket;\n\n    connect(host:string,port:number){\n        console.info(host,port);\n        this.socket = NET.connect(port,host);\n        this.socket.on('connect',(data)=>{\n            this.emit('connect');\n        });\n        var temp = new Buffer(0);\n        this.socket.on('data',(chunk)=>{\n            var sep,message,data:Buffer = Buffer.concat([temp,chunk],temp.length+chunk.length);\n            while((sep=SipClient.indexOf(data))>0){\n                message = data.toString('utf8',0,sep+2);\n                data = data.slice(sep+2);\n            }\n            console.log(message);\n            console.log( Parser.parse(message,Message) instanceof Response);\n            this.emit('SIPresponse',message);\n        })\n\n\n    }\n    register(){\n        this.send(SipClient.getMessage(`\n            REGISTER sip:win.freedomdebtrelief.com SIP/2.0\n            Via: SIP/2.0/TCP 192.168.10.105:50405;alias;branch=z9hG4bK.~3I3SLROQ;rport\n            From: <sip:101@win.freedomdebtrelief.com>;tag=7Lq7OgaDW\n            To: sip:101@win.freedomdebtrelief.com\n            CSeq: 20 REGISTER\n            Call-ID: eRebdDPcxy\n            Max-Forwards: 70\n            Supported: outbound\n            Accept: application/sdp\n            Accept: text/plain\n            Accept: application/vnd.gsma.rcs-ft-http+xml\n            Contact: <sip:101@192.168.10.105:50405;transport=tcp>;+sip.instance=\"<urn:uuid:9548ce0d-4303-475b-bbd4-ca6559d3f960>\"\n            Expires: 3600\n            User-Agent: Linphone/3.9.0 (belle-sip/1.4.2)\n            Content-Length: 0\n        `));\n    }\n    send(text:string){\n        this.socket.write(text);\n    }\n}"
  ]
}