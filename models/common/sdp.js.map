{
  "version": 3,
  "file": "sdp.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/sip/src",
  "sources": [
    "sdp.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import {Model} from \"../model\";\n\nvar DURATIONS = {\n    \"d\": 86400,\n    \"h\": 3600,\n    \"m\": 60,\n    \"s\": 1,\n    FORMAT_ORDER:[\"d\", \"h\", \"m\"]\n};\n\n\n/** The SDP types and the corresponding properties. */\nvar MEDIA_OUTPUT_ORDER = [\"i\", \"c\", \"b\", \"k\", \"rtcp\", \"ice-ufrag\", \"ice-pwd\", \"fingerprint\", \"setup\", \"mid\", \"extmap\", \"sendrecv\", \"rtcp-mux\", \"payloads\", \"ptime\", \"maxptime\", \"ssrc\"];\nvar SDP_TYPES = {\n    v: \"version\"\n    , o: \"origin\"\n    , s: \"sessionName\"\n    , i: \"sessionDescription\"\n    , u: \"uri\"\n    , e: \"emailAddress\"\n    , p: \"phoneNumber\"\n    , c: \"connection\"\n    , m: \"media\"\n    , b: \"bandwidth\"\n    , t: \"timing\"\n    , r: \"repeat\"\n    , z: \"timezones\"\n    , k: \"encryptionKey\"\n    , cat: \"category\"\n    , keywds: \"keywords\"\n    , ptime: \"packetTime\"\n    , maxptime: \"maximumPacketTime\"\n    , orient: \"orientation\"\n    , rtp: \"rtpmap\"\n    , \"payloads\": \"\"\n};\nvar OUTPUT_ORDER = [\"v\", \"o\", \"s\", \"i\", \"u\", \"e\", \"p\", \"c\", \"b\", \"t\", \"r\", \"z\", \"k\", \"a\", \"*\", \"m\"];\nvar FORMATTERS = {\n    \"*\": function (value) {\n        return value.toString();\n    },\n    origin: function (origin) {\n        return origin.username + \" \" + origin.sessionId + \" \" + origin.sessionVersion + \" \" + origin.networkType + \" \" + origin.addressType + \" \" + origin.unicastAddress;\n    },\n    timing: function (timing) {\n        return timing.start + \" \" + timing.stop;\n    },\n    duration: function (duration) {\n        if (duration === 0) {\n            return duration;\n        }\n        for (var i = 0, n = DURATIONS.FORMAT_ORDER.length; i < n; i++) {\n            var x = duration / DURATIONS[DURATIONS.FORMAT_ORDER[i]];\n            if (typeof x==\"number\") {\n                return x + DURATIONS.FORMAT_ORDER[i];\n            }\n        }\n        return duration;\n    },\n    repeat: function (repeat) {\n        var s = FORMATTERS.duration(repeat.interval) + \" \" + FORMATTERS.duration(repeat.activeDuration);\n        for (var i = 0, n = repeat.offsets.length; i < n; i++) {\n            s += \" \" + FORMATTERS.duration(repeat.offsets[i]);\n        }\n        return s;\n    },\n    timezones: function (timezones) {\n        var s = \"\";\n        for (var i = 0, n = timezones.length; i < n; i++) {\n            s += (i > 0 ? \" \" : \"\") + timezones[i].adjustment + \" \" + FORMATTERS.duration(timezones[i].offset);\n        }\n        return s;\n    },\n    encryptionKey: function (encryptionKey) {\n        return encryptionKey.method + (encryptionKey.key ? \":\" + encryptionKey.key : \"\");\n    },\n    media: function (media) {\n        var s = media.type + \" \" + media.port + (media.numberOfPorts ? \"/\" + media.numberOfPorts : \"\") + \" \" + media.protocol;\n        if (media.formats) {\n            s += \" \" + media.formats.join(\" \") + EOL;\n        }\n        if (media.payloads) {\n            for (var i = 0; i < media.payloads.length; i++) {\n                s += \" \" + media.payloads[i].id;\n            }\n            s += EOL;\n        }\n        s += formatSdpSection(media, [\"type\", \"port\", \"protocol\", \"numberOfPorts\", \"formats\"], MEDIA_OUTPUT_ORDER);\n        return s;\n    },\n    payloads: function (payload) {\n        return formatSdpSection(payload, [\"id\"], [\"rtp\", \"fmtp\"]);\n    },\n    rtpmap: function (rtp, parent) {\n        var s = parent.id + \" \" + rtp.codec + \"/\" + rtp.rate;\n        if (rtp.codecParams) {\n            s += \"/\" + rtp.codecParams;\n        }\n        return s;\n    },\n    fmtp: function (fmtp, parent) {\n        var s = parent.id + \" \";\n        if (fmtp.params.split) {\n            s += fmtp.params;\n        } else {\n            var i = 0;\n            for (var p in fmtp.params) {\n                if (fmtp.params.hasOwnProperty(p)) {\n                    s += (++i === 1 ? \"\" : \"; \") + p + \"=\" + fmtp.params[p];\n                }\n            }\n        }\n        return s;\n    },\n    connection: function (connection) {\n        return connection.networkType + \" \" + connection.addressType + \" \" + connection.connectionAddress;\n    }\n};\nvar EOL = \"\\r\\n\";\nfor (var t in SDP_TYPES) {\n    if (SDP_TYPES.hasOwnProperty(t)) {\n        SDP_TYPES[SDP_TYPES[t]] = t;\n    }\n}\nfunction includes(bwlist, element) {\n    if (!bwlist) {\n        return false;\n    }\n    if (typeof bwlist === \"function\") {\n        return bwlist(element);\n    }\n    if (bwlist.indexOf) {\n        return bwlist.indexOf(element) >= 0;\n    }\n    return false;\n}\nfunction forEach(obj, callback, options) {\n    options = options || {};\n    var props = [];\n    for (var p in obj) {\n        if (options.onlyOwnProperties === false && !obj.hasOwnProperty(p)) {\n            continue;\n        }\n        if (options.skipFunctions !== false && (typeof obj[p] === \"function\")) {\n            continue;\n        }\n        if (options.whitelist && !includes(options.whitelist, p)) {\n            continue;\n        }\n        if (options.blacklist && includes(options.blacklist, p)) {\n            continue;\n        }\n        props.push(p);\n    }\n    props.sort(options.comparator);\n    for (var i = 0; i < props.length; i++) {\n        callback(obj[props[i]], props[i], obj);\n    }\n}\nfunction getOutputOrder(order, property):number {\n    var idx = order.indexOf(property);\n    if (idx < 0) {\n        idx = order.indexOf(SDP_TYPES[property]);\n    }\n    if (idx < 0) {\n        idx = order.indexOf(\"*\");\n    }\n    if (idx < 0) {\n        idx = order.length;\n    }\n    return idx;\n}\nfunction ordering(order) {\n    return function(a, b) {\n        return getOutputOrder(order, a) - getOutputOrder(order, b);\n    };\n}\nfunction formatSdpProperty(section, propertyName) {\n    // if the property does not exist, return empty\n    if (section[propertyName] === undefined) {\n        return \"\";\n    }\n    // get the prefix of the property according to SDP specs\n    var prefix = SDP_TYPES[propertyName] !== undefined ? SDP_TYPES[propertyName] : propertyName;\n    // gets the formatter for the property\n    var formatter = FORMATTERS[propertyName] || FORMATTERS[prefix] || FORMATTERS[\"*\"];\n    // if the prefix is one single character, then it is a SDP type\n    // otherwise it is a SDP attribute\n    if (prefix.length > 1) {\n        prefix = \"a=\" + prefix;\n        if (section[propertyName] === false) {\n            return \"\";\n        }\n        if (section[propertyName] === true) {\n            return prefix + EOL;\n        }\n        prefix += \":\";\n    } else if (prefix.length > 0) {\n        prefix += \"=\";\n    }\n    if (propertyName !== \"timezones\" && section[propertyName].push) {\n        var s = \"\";\n        for (var i = 0; i < section[propertyName].length; i++) {\n            s += prefix + formatter(section[propertyName][i], section[propertyName]) + (prefix.length ? EOL : \"\");\n        }\n        return s;\n    }\n    return prefix + formatter(section[propertyName], section) + (prefix.length ? EOL : \"\");\n}\nfunction formatSdpSection(section, excluded, order) {\n    var s = \"\";\n    forEach(section, function (value, property, section) {\n        s += formatSdpProperty(section, property);\n    }, {\n        blacklist: excluded ? function (p) {\n            return excluded.indexOf(p) >= 0 || excluded.indexOf(SDP_TYPES[p]) >= 0;\n        } : null,\n        comparator: ordering(order)\n    });\n    // remove empty lines - it seems that browsers cannot deal with empty lines in SDP, even at the end\n    s = s.replace(/[\\r\\n]{2,}/g, EOL);\n    return s;\n}\n\nexport interface SdpOrigin {\n    username:string;\n    sessionId:string;\n    sessionVersion:number;\n    networkType:string;\n    addressType:string;\n    unicastAddress:string;\n}\n\nexport interface SdpConnection {\n    networkType:string;\n    addressType:string;\n    connectionAddress:string;\n}\nexport interface SdpTiming {\n    start:number;\n    stop:number;\n}\n\nexport interface SdpMedia {\n    type:string;\n    port:number;\n    protocol:string;\n    payloads:SdpPayload[];\n    inactive:boolean;\n}\n\nexport interface SdpPayload {\n    id:number;\n    rtp:SdpRtp;\n    fmtp:SdpFmtp;\n}\n\nexport interface SdpRtp {\n    codec:string;\n    rate:number;\n}\nexport interface SdpFmtp {\n    params:any;\n}\n\nexport class Sdp extends Model {\n    \n    public version:number;\n    public origin:SdpOrigin;\n    public sessionName:string;\n    public connection:SdpConnection;\n    public timing:SdpTiming;\n    public media:SdpMedia[];\n\n    get audio():SdpMedia{\n        for(var i=0;i<this.media.length;i++){\n            if(this.media[i].type==\"audio\"){\n                return this.media[i];\n            }\n        }\n    }\n    \n    public static format(sdp) {\n        return formatSdpSection(sdp, ['audio'], OUTPUT_ORDER);\n    }\n    \n    constructor(data?){\n        if(typeof data =='string' || data instanceof Buffer){\n            return <Sdp>Sdp.new(data.toString())\n        }else{\n            super(data);\n        }\n    }\n    toString(options?:any){\n        return Sdp.format(this);\n    }\n}"
  ]
}