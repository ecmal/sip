{
  "version": 3,
  "file": "utils.js",
  "sourceRoot": "/Users/Sergey/Work/GH/ecmal/sip/src",
  "sources": [
    "utils.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import Node from '../../node';\n\nexport enum Color {\n    RED=31,      RED_FG=41,\n    GREEN=32,    GREEN_FG=42,\n    YELLOW=33,   YELLOW_FG=43,\n    BLUE=34,     BLUE_FG=44,\n    MAGENTA=35,  MAGENTA_FG=45,\n    CYAN=36,     CYAN_FG=46,\n    LGRAY=37,    LGRAY_FG=47,\n    GRAY=90,     GRAY_FG=100,\n\n}\nexport class Paint {\n    static bold(text){\n        return `\\033[1m${text}\\033[0m`\n    }\n    static dim(text){\n        return `\\033[2m${text}\\033[0m`\n    }\n    static underline(text){\n        return `\\033[4m${text}\\033[0m`\n    }\n    static color(text:string,color:Color){\n        return `\\033[${color}m${text}\\033[0m`\n    }\n    static red(text:string,bg?:boolean){\n        return this.color(text,!bg?Color.RED:Color.RED_FG);\n    }\n    static green(text:string,bg?:boolean){\n        return this.color(text,!bg?Color.GREEN:Color.GREEN_FG);\n    }\n    static yellow(text:string,bg?:boolean){\n        return this.color(text,!bg?Color.YELLOW:Color.YELLOW_FG);\n    }\n    static blue(text:string,bg?:boolean){\n        return this.color(text,!bg?Color.BLUE:Color.BLUE_FG);\n    }\n    static magenta(text:string,bg?:boolean){\n        return this.color(text,!bg?Color.MAGENTA:Color.MAGENTA_FG);\n    }\n    static cyan(text:string,bg?:boolean){\n        return this.color(text,!bg?Color.CYAN:Color.CYAN_FG);\n    }\n    static gray(text:string,bg?:boolean){\n        return this.color(text,!bg?Color.GRAY:Color.GRAY_FG);\n    }\n}\nexport class Util {\n    public static getLocalIpAddress():Promise<string>{\n        return new Promise((accept,reject)=>{\n            try {\n                var dis = Node.Net.connect(80, 'google.com');\n                dis.on('connect', r=>{\n                    var address = dis.localAddress;\n                    dis.end();\n                    dis.destroy();\n                    accept(address);\n                });\n                dis.on('error',e=>reject(e))\n            }catch(ex){\n                reject(ex);\n            }\n        });\n\n    }\n    static toUnsigned(n:number):number{\n        return ((n >>> 1) * 2 + (n & 1));\n    }\n    static addZeros(num:number,size:number):string{\n        var s='';\n        for(var i=0;i<size;i++){\n            s+='0';\n        }\n        return (s+num.toString(16)).substr(-size);\n    }\n    static random():number{\n        return Math.round(Math.random()*0xFFFFFFFF)\n    }\n    static guid(){\n        return Node.Crypto.randomBytes(16).toString('hex');\n    }\n    static md5(text:string){\n        return Node.Crypto.createHash('md5').update(text).digest('hex');\n    }\n    static hash(count?:number,text?){\n        return this.md5(text?text.toString():Util.guid()).substring(0,count||32);\n    }\n    static toParamString(params:any){\n        return params?Object.keys(params).map(k=>`;${k}${\n            params[k]?(`=${params[k]}`):''\n        }`).join(''):''\n    }\n}"
  ]
}